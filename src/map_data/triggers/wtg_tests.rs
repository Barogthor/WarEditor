use log::{debug, error, info, trace, warn};

#[cfg(test)]
mod trigger_file_tests{
    use std::io::Cursor;

    use crate::GameData;
    use crate::globals::GameVersion::TFT;
    use crate::map_data::binary_reader::BinaryReader;
    use crate::map_data::triggers::TriggerDefinition;

    const TFT_TRIGGER_EVENT: [u8;116] = [0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6D, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x53, 0x69, 0x6E, 0x67, 0x6C, 0x65, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x35, 0x2E, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    const TFT_TRIGGER_CONDITION: [u8;266] = [0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6F, 0x6E, 0x64, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x43, 0x6F, 0x6E, 0x64, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4F, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6F, 0x72, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x65, 0x4F, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6F, 0x64, 0x65, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x4F, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42, 0x4A, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x4F, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42, 0x4A, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6F, 0x72, 0x45, 0x71, 0x75, 0x61, 0x6C, 0x45, 0x4E, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x32, 0x4F, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42, 0x4A, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x32, 0x4F, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42, 0x4A, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x73, 0x74, 0x6F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    const TFT_TRIGGER_ACTION: [u8;102] = [0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6C, 0x65, 0x65, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    const TFT_TRIGGER_DISABLED: [u8;119] = [54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6C, 0x65, 0x64, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6C, 0x65, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6C, 0x65, 0x65, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    const TFT_TRIGGER_DISABLED_BUT_ON: [u8;118] = [0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6C, 0x65, 0x64, 0x42, 0x75, 0x74, 0x4F, 0x6E, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6C, 0x65, 0x64, 0x20, 0x42, 0x75, 0x74, 0x20, 0x4F, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6C, 0x65, 0x65, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    const TFT_TRIGGER_DISABLED_NOT_ON: [u8;118] = [0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6C, 0x65, 0x64, 0x4E, 0x6F, 0x74, 0x4F, 0x6E, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6C, 0x65, 0x64, 0x20, 0x4E, 0x6F, 0x74, 0x20, 0x4F, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6C, 0x65, 0x65, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    const TFT_TRIGGER_IF_THEN_ELSE: [u8;312] = [0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x66, 0x54, 0x68, 0x65, 0x6E, 0x45, 0x6C, 0x73, 0x65, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x49, 0x66, 0x20, 0x54, 0x68, 0x65, 0x6E, 0x20, 0x45, 0x6C, 0x73, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x49, 0x66, 0x54, 0x68, 0x65, 0x6E, 0x45, 0x6C, 0x73, 0x65, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4F, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6F, 0x72, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x65, 0x42, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x54, 0x52, 0x55, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6F, 0x72, 0x45, 0x71, 0x75, 0x61, 0x6C, 0x45, 0x4E, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x74, 0x72, 0x75, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x44, 0x6F, 0x4E, 0x6F, 0x74, 0x68, 0x69, 0x6E, 0x67, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6C, 0x65, 0x65, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x44, 0x6F, 0x4E, 0x6F, 0x74, 0x68, 0x69, 0x6E, 0x67, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x44, 0x6F, 0x4E, 0x6F, 0x74, 0x68, 0x69, 0x6E, 0x67, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    const TFT_TRIGGER_FOR_LOOP_A: [u8;160] = [0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4C, 0x6F, 0x6F, 0x70, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x4C, 0x6F, 0x6F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x6F, 0x72, 0x4C, 0x6F, 0x6F, 0x70, 0x41, 0x4D, 0x75, 0x6C, 0x74, 0x69, 0x70, 0x6C, 0x65, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x31, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6C, 0x65, 0x65, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];

    #[test]
    fn parse_event_trigger(){
        let game_data = GameData::new();
        let buffer = TFT_TRIGGER_EVENT.to_vec();
        let mut reader = BinaryReader::new(buffer);
        let trigger = TriggerDefinition::from(&mut reader, &TFT, game_data.get_trigger_data());
        assert_eq!(reader.pos()as usize, TFT_TRIGGER_EVENT.len());
    }

    #[test]
    fn parse_condition_trigger(){
        let game_data = GameData::new();
        let buffer = TFT_TRIGGER_CONDITION.to_vec();
        let mut reader = BinaryReader::new(buffer);
        let trigger = TriggerDefinition::from(&mut reader, &TFT, game_data.get_trigger_data());
        assert_eq!(reader.pos()as usize, TFT_TRIGGER_CONDITION.len());
    }

    #[test]
    fn parse_action_trigger(){
        let game_data = GameData::new();
        let buffer = TFT_TRIGGER_ACTION.to_vec();
        let mut reader = BinaryReader::new(buffer);
        let trigger = TriggerDefinition::from(&mut reader, &TFT, game_data.get_trigger_data());
        assert_eq!(reader.pos()as usize, TFT_TRIGGER_ACTION.len());
    }

    #[test]
    fn parse_disabled_trigger(){
        let game_data = GameData::new();
        let buffer = TFT_TRIGGER_DISABLED.to_vec();
        let mut reader = BinaryReader::new(buffer);
        let trigger = TriggerDefinition::from(&mut reader, &TFT, game_data.get_trigger_data());
        assert_eq!(reader.pos()as usize, TFT_TRIGGER_DISABLED.len());
    }

    #[test]
    fn parse_disabled_not_on_trigger(){
        let game_data = GameData::new();
        let buffer = TFT_TRIGGER_DISABLED_BUT_ON.to_vec();
        let mut reader = BinaryReader::new(buffer);
        let trigger = TriggerDefinition::from(&mut reader, &TFT, game_data.get_trigger_data());
        assert_eq!(reader.pos()as usize, TFT_TRIGGER_DISABLED_BUT_ON.len());
    }

    #[test]
    fn parse_if_then_else_trigger(){
        let game_data = GameData::new();
        let buffer = TFT_TRIGGER_IF_THEN_ELSE.to_vec();
        let mut reader = BinaryReader::new(buffer);
        let trigger = TriggerDefinition::from(&mut reader, &TFT, game_data.get_trigger_data());
        assert_eq!(reader.pos() as usize, TFT_TRIGGER_IF_THEN_ELSE.len());
    }

    #[test]
    fn parse_loop_a_trigger(){
        let game_data = GameData::new();
        let buffer = TFT_TRIGGER_FOR_LOOP_A.to_vec();
        let mut reader = BinaryReader::new(buffer);
        let trigger = TriggerDefinition::from(&mut reader, &TFT, game_data.get_trigger_data());
        assert_eq!(reader.pos() as usize, TFT_TRIGGER_FOR_LOOP_A.len());
    }
}